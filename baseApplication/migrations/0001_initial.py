# Generated by Django 4.0.3 on 2022-04-13 19:58

import datetime
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dislike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('text', models.TextField(max_length=8192)),
                ('publish_date', models.DateField(default=datetime.date.today)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='baseApplication.profile')),
                ('dislike', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='baseApplication.dislike')),
                ('like', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='baseApplication.like')),
            ],
            managers=[
                ('manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32)),
                ('last_update', models.DateField(auto_now=True)),
                ('questions', models.ManyToManyField(blank=True, to='baseApplication.question')),
            ],
            managers=[
                ('manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='like',
            name='authors',
            field=models.ManyToManyField(blank=True, to='baseApplication.profile'),
        ),
        migrations.AddField(
            model_name='dislike',
            name='authors',
            field=models.ManyToManyField(blank=True, to='baseApplication.profile'),
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=8192)),
                ('isCorrect', models.BooleanField(default=False)),
                ('publish_date', models.DateField(default=datetime.date.today)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='baseApplication.profile')),
                ('dislike', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='baseApplication.dislike')),
                ('like', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='baseApplication.like')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='baseApplication.question')),
            ],
            managers=[
                ('manager', django.db.models.manager.Manager()),
            ],
        ),
    ]
